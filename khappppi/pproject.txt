# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'pproject.ui'
#
# Created by: PyQt5 UI code generator 5.13.0
#
# WARNING! All changes made in this file will be lost!


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(1271, 705)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.introicon = QtWidgets.QPushButton(self.centralwidget)
        self.introicon.setGeometry(QtCore.QRect(20, 100, 81, 80))
        self.introicon.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icons/intro.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.introicon.setIcon(icon)
        self.introicon.setIconSize(QtCore.QSize(81, 80))
        self.introicon.setObjectName("introicon")
        self.topicicon = QtWidgets.QPushButton(self.centralwidget)
        self.topicicon.setGeometry(QtCore.QRect(20, 200, 81, 80))
        self.topicicon.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("icons/topics.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.topicicon.setIcon(icon1)
        self.topicicon.setIconSize(QtCore.QSize(81, 80))
        self.topicicon.setObjectName("topicicon")
        self.codesicon = QtWidgets.QPushButton(self.centralwidget)
        self.codesicon.setGeometry(QtCore.QRect(20, 300, 81, 80))
        self.codesicon.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("icons/codes.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.codesicon.setIcon(icon2)
        self.codesicon.setIconSize(QtCore.QSize(81, 80))
        self.codesicon.setObjectName("codesicon")
        self.quizicon = QtWidgets.QPushButton(self.centralwidget)
        self.quizicon.setGeometry(QtCore.QRect(20, 400, 81, 80))
        self.quizicon.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("icons/quiz.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.quizicon.setIcon(icon3)
        self.quizicon.setIconSize(QtCore.QSize(81, 80))
        self.quizicon.setObjectName("quizicon")
        self.loginicon = QtWidgets.QPushButton(self.centralwidget)
        self.loginicon.setGeometry(QtCore.QRect(20, 510, 81, 80))
        self.loginicon.setText("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("icons/login.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.loginicon.setIcon(icon4)
        self.loginicon.setIconSize(QtCore.QSize(81, 80))
        self.loginicon.setObjectName("loginicon")
        self.outertabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.outertabWidget.setGeometry(QtCore.QRect(130, 70, 1091, 581))
        self.outertabWidget.setObjectName("outertabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.introtextedit = QtWidgets.QTextEdit(self.tab)
        self.introtextedit.setGeometry(QtCore.QRect(0, 0, 1081, 561))
        self.introtextedit.setObjectName("introtextedit")
        self.outertabWidget.addTab(self.tab, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.tabWidget_2 = QtWidgets.QTabWidget(self.tab_3)
        self.tabWidget_2.setGeometry(QtCore.QRect(-10, 0, 1091, 561))
        self.tabWidget_2.setObjectName("tabWidget_2")
        self.tab_6 = QtWidgets.QWidget()
        self.tab_6.setObjectName("tab_6")
        self.comboBox = QtWidgets.QComboBox(self.tab_6)
        self.comboBox.setGeometry(QtCore.QRect(90, 50, 151, 71))
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.pushButton_6 = QtWidgets.QPushButton(self.tab_6)
        self.pushButton_6.setGeometry(QtCore.QRect(420, 70, 75, 31))
        self.pushButton_6.setObjectName("pushButton_6")
        self.comboBox_2 = QtWidgets.QComboBox(self.tab_6)
        self.comboBox_2.setGeometry(QtCore.QRect(90, 200, 151, 71))
        self.comboBox_2.setObjectName("comboBox_2")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.setItemText(1, "")
        self.comboBox_3 = QtWidgets.QComboBox(self.tab_6)
        self.comboBox_3.setGeometry(QtCore.QRect(90, 350, 151, 71))
        self.comboBox_3.setObjectName("comboBox_3")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.setItemText(1, "")
        self.comboBox_3.addItem("")
        self.comboBox_3.setItemText(2, "")
        self.pushButton_7 = QtWidgets.QPushButton(self.tab_6)
        self.pushButton_7.setGeometry(QtCore.QRect(420, 220, 75, 31))
        self.pushButton_7.setObjectName("pushButton_7")
        self.pushButton_8 = QtWidgets.QPushButton(self.tab_6)
        self.pushButton_8.setGeometry(QtCore.QRect(420, 370, 75, 31))
        self.pushButton_8.setObjectName("pushButton_8")
        self.tabWidget_2.addTab(self.tab_6, "")
        self.tab_7 = QtWidgets.QWidget()
        self.tab_7.setObjectName("tab_7")
        self.tabWidget_2.addTab(self.tab_7, "")
        self.tab_8 = QtWidgets.QWidget()
        self.tab_8.setObjectName("tab_8")
        self.tabWidget_2.addTab(self.tab_8, "")
        self.tab_9 = QtWidgets.QWidget()
        self.tab_9.setObjectName("tab_9")
        self.tabWidget_2.addTab(self.tab_9, "")
        self.tab_10 = QtWidgets.QWidget()
        self.tab_10.setObjectName("tab_10")
        self.tabWidget_2.addTab(self.tab_10, "")
        self.outertabWidget.addTab(self.tab_3, "")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.tabWidget_3 = QtWidgets.QTabWidget(self.tab_4)
        self.tabWidget_3.setGeometry(QtCore.QRect(-4, -1, 1081, 561))
        self.tabWidget_3.setObjectName("tabWidget_3")
        self.tab_11 = QtWidgets.QWidget()
        self.tab_11.setObjectName("tab_11")
        self.pushButton = QtWidgets.QPushButton(self.tab_11)
        self.pushButton.setGeometry(QtCore.QRect(470, 40, 141, 71))
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.tab_11)
        self.pushButton_2.setGeometry(QtCore.QRect(470, 330, 141, 71))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.tab_11)
        self.pushButton_3.setGeometry(QtCore.QRect(470, 180, 141, 71))
        self.pushButton_3.setObjectName("pushButton_3")
        self.tabWidget_3.addTab(self.tab_11, "")
        self.tab_12 = QtWidgets.QWidget()
        self.tab_12.setObjectName("tab_12")
        self.tabWidget_3.addTab(self.tab_12, "")
        self.tab_14 = QtWidgets.QWidget()
        self.tab_14.setObjectName("tab_14")
        self.tabWidget_3.addTab(self.tab_14, "")
        self.tab_13 = QtWidgets.QWidget()
        self.tab_13.setObjectName("tab_13")
        self.tabWidget_3.addTab(self.tab_13, "")
        self.outertabWidget.addTab(self.tab_4, "")
        self.tab_5 = QtWidgets.QWidget()
        self.tab_5.setObjectName("tab_5")
        self.tabWidget = QtWidgets.QTabWidget(self.tab_5)
        self.tabWidget.setGeometry(QtCore.QRect(-4, -1, 1081, 561))
        self.tabWidget.setObjectName("tabWidget")
        self.tab_15 = QtWidgets.QWidget()
        self.tab_15.setObjectName("tab_15")
        self.pushButton_4 = QtWidgets.QPushButton(self.tab_15)
        self.pushButton_4.setGeometry(QtCore.QRect(470, 50, 141, 71))
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_5 = QtWidgets.QPushButton(self.tab_15)
        self.pushButton_5.setGeometry(QtCore.QRect(470, 190, 141, 71))
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_9 = QtWidgets.QPushButton(self.tab_15)
        self.pushButton_9.setGeometry(QtCore.QRect(470, 340, 141, 71))
        self.pushButton_9.setObjectName("pushButton_9")
        self.tabWidget.addTab(self.tab_15, "")
        self.tab_17 = QtWidgets.QWidget()
        self.tab_17.setObjectName("tab_17")
        self.textBrowser = QtWidgets.QTextBrowser(self.tab_17)
        self.textBrowser.setGeometry(QtCore.QRect(0, -10, 511, 271))
        self.textBrowser.setObjectName("textBrowser")
        self.pushButton_10 = QtWidgets.QPushButton(self.tab_17)
        self.pushButton_10.setGeometry(QtCore.QRect(510, 190, 75, 23))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pushButton_10.setFont(font)
        self.pushButton_10.setObjectName("pushButton_10")
        self.radioButton = QtWidgets.QRadioButton(self.tab_17)
        self.radioButton.setGeometry(QtCore.QRect(510, 0, 321, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton.setFont(font)
        self.radioButton.setObjectName("radioButton")
        self.radioButton_2 = QtWidgets.QRadioButton(self.tab_17)
        self.radioButton_2.setGeometry(QtCore.QRect(510, 40, 331, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_2.setFont(font)
        self.radioButton_2.setObjectName("radioButton_2")
        self.radioButton_3 = QtWidgets.QRadioButton(self.tab_17)
        self.radioButton_3.setGeometry(QtCore.QRect(510, 90, 351, 17))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_3.setFont(font)
        self.radioButton_3.setObjectName("radioButton_3")
        self.radioButton_4 = QtWidgets.QRadioButton(self.tab_17)
        self.radioButton_4.setGeometry(QtCore.QRect(510, 130, 351, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_4.setFont(font)
        self.radioButton_4.setObjectName("radioButton_4")
        self.textBrowser_2 = QtWidgets.QTextBrowser(self.tab_17)
        self.textBrowser_2.setGeometry(QtCore.QRect(0, 260, 511, 281))
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.radioButton_5 = QtWidgets.QRadioButton(self.tab_17)
        self.radioButton_5.setGeometry(QtCore.QRect(510, 310, 551, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_5.setFont(font)
        self.radioButton_5.setObjectName("radioButton_5")
        self.pushButton_11 = QtWidgets.QPushButton(self.tab_17)
        self.pushButton_11.setGeometry(QtCore.QRect(510, 460, 75, 23))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pushButton_11.setFont(font)
        self.pushButton_11.setObjectName("pushButton_11")
        self.radioButton_6 = QtWidgets.QRadioButton(self.tab_17)
        self.radioButton_6.setGeometry(QtCore.QRect(510, 360, 561, 17))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_6.setFont(font)
        self.radioButton_6.setObjectName("radioButton_6")
        self.radioButton_7 = QtWidgets.QRadioButton(self.tab_17)
        self.radioButton_7.setGeometry(QtCore.QRect(510, 400, 351, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_7.setFont(font)
        self.radioButton_7.setObjectName("radioButton_7")
        self.radioButton_8 = QtWidgets.QRadioButton(self.tab_17)
        self.radioButton_8.setGeometry(QtCore.QRect(510, 270, 411, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_8.setFont(font)
        self.radioButton_8.setObjectName("radioButton_8")
        self.tabWidget.addTab(self.tab_17, "")
        self.tab_16 = QtWidgets.QWidget()
        self.tab_16.setObjectName("tab_16")
        self.radioButton_25 = QtWidgets.QRadioButton(self.tab_16)
        self.radioButton_25.setGeometry(QtCore.QRect(510, 50, 331, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_25.setFont(font)
        self.radioButton_25.setObjectName("radioButton_25")
        self.pushButton_22 = QtWidgets.QPushButton(self.tab_16)
        self.pushButton_22.setGeometry(QtCore.QRect(510, 200, 75, 23))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pushButton_22.setFont(font)
        self.pushButton_22.setObjectName("pushButton_22")
        self.radioButton_26 = QtWidgets.QRadioButton(self.tab_16)
        self.radioButton_26.setGeometry(QtCore.QRect(510, 410, 351, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_26.setFont(font)
        self.radioButton_26.setObjectName("radioButton_26")
        self.textBrowser_7 = QtWidgets.QTextBrowser(self.tab_16)
        self.textBrowser_7.setGeometry(QtCore.QRect(0, 270, 511, 271))
        self.textBrowser_7.setObjectName("textBrowser_7")
        self.radioButton_27 = QtWidgets.QRadioButton(self.tab_16)
        self.radioButton_27.setGeometry(QtCore.QRect(510, 100, 351, 17))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_27.setFont(font)
        self.radioButton_27.setObjectName("radioButton_27")
        self.radioButton_28 = QtWidgets.QRadioButton(self.tab_16)
        self.radioButton_28.setGeometry(QtCore.QRect(510, 140, 351, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_28.setFont(font)
        self.radioButton_28.setObjectName("radioButton_28")
        self.radioButton_29 = QtWidgets.QRadioButton(self.tab_16)
        self.radioButton_29.setGeometry(QtCore.QRect(510, 280, 411, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_29.setFont(font)
        self.radioButton_29.setObjectName("radioButton_29")
        self.pushButton_23 = QtWidgets.QPushButton(self.tab_16)
        self.pushButton_23.setGeometry(QtCore.QRect(510, 470, 75, 23))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pushButton_23.setFont(font)
        self.pushButton_23.setObjectName("pushButton_23")
        self.radioButton_30 = QtWidgets.QRadioButton(self.tab_16)
        self.radioButton_30.setGeometry(QtCore.QRect(510, 370, 561, 17))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_30.setFont(font)
        self.radioButton_30.setObjectName("radioButton_30")
        self.textBrowser_8 = QtWidgets.QTextBrowser(self.tab_16)
        self.textBrowser_8.setGeometry(QtCore.QRect(0, 0, 511, 271))
        self.textBrowser_8.setObjectName("textBrowser_8")
        self.radioButton_31 = QtWidgets.QRadioButton(self.tab_16)
        self.radioButton_31.setGeometry(QtCore.QRect(510, 10, 321, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_31.setFont(font)
        self.radioButton_31.setObjectName("radioButton_31")
        self.radioButton_32 = QtWidgets.QRadioButton(self.tab_16)
        self.radioButton_32.setGeometry(QtCore.QRect(510, 320, 551, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_32.setFont(font)
        self.radioButton_32.setObjectName("radioButton_32")
        self.tabWidget.addTab(self.tab_16, "")
        self.tab_18 = QtWidgets.QWidget()
        self.tab_18.setObjectName("tab_18")
        self.radioButton_33 = QtWidgets.QRadioButton(self.tab_18)
        self.radioButton_33.setGeometry(QtCore.QRect(510, 280, 411, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_33.setFont(font)
        self.radioButton_33.setObjectName("radioButton_33")
        self.textBrowser_9 = QtWidgets.QTextBrowser(self.tab_18)
        self.textBrowser_9.setGeometry(QtCore.QRect(0, 0, 511, 271))
        self.textBrowser_9.setObjectName("textBrowser_9")
        self.radioButton_34 = QtWidgets.QRadioButton(self.tab_18)
        self.radioButton_34.setGeometry(QtCore.QRect(510, 10, 321, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_34.setFont(font)
        self.radioButton_34.setObjectName("radioButton_34")
        self.radioButton_35 = QtWidgets.QRadioButton(self.tab_18)
        self.radioButton_35.setGeometry(QtCore.QRect(510, 140, 351, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_35.setFont(font)
        self.radioButton_35.setObjectName("radioButton_35")
        self.radioButton_36 = QtWidgets.QRadioButton(self.tab_18)
        self.radioButton_36.setGeometry(QtCore.QRect(510, 410, 351, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_36.setFont(font)
        self.radioButton_36.setObjectName("radioButton_36")
        self.pushButton_24 = QtWidgets.QPushButton(self.tab_18)
        self.pushButton_24.setGeometry(QtCore.QRect(510, 470, 75, 23))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pushButton_24.setFont(font)
        self.pushButton_24.setObjectName("pushButton_24")
        self.radioButton_37 = QtWidgets.QRadioButton(self.tab_18)
        self.radioButton_37.setGeometry(QtCore.QRect(510, 100, 351, 17))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_37.setFont(font)
        self.radioButton_37.setObjectName("radioButton_37")
        self.radioButton_38 = QtWidgets.QRadioButton(self.tab_18)
        self.radioButton_38.setGeometry(QtCore.QRect(510, 50, 331, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_38.setFont(font)
        self.radioButton_38.setObjectName("radioButton_38")
        self.radioButton_39 = QtWidgets.QRadioButton(self.tab_18)
        self.radioButton_39.setGeometry(QtCore.QRect(510, 320, 551, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_39.setFont(font)
        self.radioButton_39.setObjectName("radioButton_39")
        self.radioButton_40 = QtWidgets.QRadioButton(self.tab_18)
        self.radioButton_40.setGeometry(QtCore.QRect(510, 370, 561, 17))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_40.setFont(font)
        self.radioButton_40.setObjectName("radioButton_40")
        self.pushButton_25 = QtWidgets.QPushButton(self.tab_18)
        self.pushButton_25.setGeometry(QtCore.QRect(510, 200, 75, 23))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pushButton_25.setFont(font)
        self.pushButton_25.setObjectName("pushButton_25")
        self.textBrowser_10 = QtWidgets.QTextBrowser(self.tab_18)
        self.textBrowser_10.setGeometry(QtCore.QRect(0, 270, 511, 271))
        self.textBrowser_10.setObjectName("textBrowser_10")
        self.tabWidget.addTab(self.tab_18, "")
        self.tab_27 = QtWidgets.QWidget()
        self.tab_27.setObjectName("tab_27")
        self.radioButton_41 = QtWidgets.QRadioButton(self.tab_27)
        self.radioButton_41.setGeometry(QtCore.QRect(510, 280, 411, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_41.setFont(font)
        self.radioButton_41.setObjectName("radioButton_41")
        self.textBrowser_11 = QtWidgets.QTextBrowser(self.tab_27)
        self.textBrowser_11.setGeometry(QtCore.QRect(0, 0, 511, 271))
        self.textBrowser_11.setObjectName("textBrowser_11")
        self.radioButton_42 = QtWidgets.QRadioButton(self.tab_27)
        self.radioButton_42.setGeometry(QtCore.QRect(510, 10, 321, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_42.setFont(font)
        self.radioButton_42.setObjectName("radioButton_42")
        self.radioButton_43 = QtWidgets.QRadioButton(self.tab_27)
        self.radioButton_43.setGeometry(QtCore.QRect(510, 140, 391, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_43.setFont(font)
        self.radioButton_43.setObjectName("radioButton_43")
        self.radioButton_44 = QtWidgets.QRadioButton(self.tab_27)
        self.radioButton_44.setGeometry(QtCore.QRect(510, 410, 351, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_44.setFont(font)
        self.radioButton_44.setObjectName("radioButton_44")
        self.pushButton_26 = QtWidgets.QPushButton(self.tab_27)
        self.pushButton_26.setGeometry(QtCore.QRect(510, 470, 75, 23))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pushButton_26.setFont(font)
        self.pushButton_26.setObjectName("pushButton_26")
        self.radioButton_45 = QtWidgets.QRadioButton(self.tab_27)
        self.radioButton_45.setGeometry(QtCore.QRect(510, 100, 511, 17))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_45.setFont(font)
        self.radioButton_45.setObjectName("radioButton_45")
        self.radioButton_46 = QtWidgets.QRadioButton(self.tab_27)
        self.radioButton_46.setGeometry(QtCore.QRect(510, 50, 331, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_46.setFont(font)
        self.radioButton_46.setObjectName("radioButton_46")
        self.radioButton_47 = QtWidgets.QRadioButton(self.tab_27)
        self.radioButton_47.setGeometry(QtCore.QRect(510, 320, 551, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_47.setFont(font)
        self.radioButton_47.setObjectName("radioButton_47")
        self.radioButton_48 = QtWidgets.QRadioButton(self.tab_27)
        self.radioButton_48.setGeometry(QtCore.QRect(510, 370, 561, 17))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_48.setFont(font)
        self.radioButton_48.setObjectName("radioButton_48")
        self.pushButton_27 = QtWidgets.QPushButton(self.tab_27)
        self.pushButton_27.setGeometry(QtCore.QRect(510, 200, 75, 23))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pushButton_27.setFont(font)
        self.pushButton_27.setObjectName("pushButton_27")
        self.textBrowser_12 = QtWidgets.QTextBrowser(self.tab_27)
        self.textBrowser_12.setGeometry(QtCore.QRect(0, 270, 511, 271))
        self.textBrowser_12.setObjectName("textBrowser_12")
        self.tabWidget.addTab(self.tab_27, "")
        self.tab_28 = QtWidgets.QWidget()
        self.tab_28.setObjectName("tab_28")
        self.radioButton_49 = QtWidgets.QRadioButton(self.tab_28)
        self.radioButton_49.setGeometry(QtCore.QRect(510, 370, 561, 17))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_49.setFont(font)
        self.radioButton_49.setObjectName("radioButton_49")
        self.radioButton_50 = QtWidgets.QRadioButton(self.tab_28)
        self.radioButton_50.setGeometry(QtCore.QRect(510, 50, 531, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_50.setFont(font)
        self.radioButton_50.setObjectName("radioButton_50")
        self.pushButton_28 = QtWidgets.QPushButton(self.tab_28)
        self.pushButton_28.setGeometry(QtCore.QRect(510, 470, 75, 23))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pushButton_28.setFont(font)
        self.pushButton_28.setObjectName("pushButton_28")
        self.radioButton_51 = QtWidgets.QRadioButton(self.tab_28)
        self.radioButton_51.setGeometry(QtCore.QRect(510, 320, 551, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_51.setFont(font)
        self.radioButton_51.setObjectName("radioButton_51")
        self.radioButton_52 = QtWidgets.QRadioButton(self.tab_28)
        self.radioButton_52.setGeometry(QtCore.QRect(510, 10, 431, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_52.setFont(font)
        self.radioButton_52.setObjectName("radioButton_52")
        self.radioButton_53 = QtWidgets.QRadioButton(self.tab_28)
        self.radioButton_53.setGeometry(QtCore.QRect(510, 140, 391, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_53.setFont(font)
        self.radioButton_53.setObjectName("radioButton_53")
        self.textBrowser_13 = QtWidgets.QTextBrowser(self.tab_28)
        self.textBrowser_13.setGeometry(QtCore.QRect(0, 270, 511, 271))
        self.textBrowser_13.setObjectName("textBrowser_13")
        self.textBrowser_14 = QtWidgets.QTextBrowser(self.tab_28)
        self.textBrowser_14.setGeometry(QtCore.QRect(0, 0, 511, 271))
        self.textBrowser_14.setObjectName("textBrowser_14")
        self.radioButton_54 = QtWidgets.QRadioButton(self.tab_28)
        self.radioButton_54.setGeometry(QtCore.QRect(510, 280, 411, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_54.setFont(font)
        self.radioButton_54.setObjectName("radioButton_54")
        self.radioButton_55 = QtWidgets.QRadioButton(self.tab_28)
        self.radioButton_55.setGeometry(QtCore.QRect(510, 100, 511, 17))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_55.setFont(font)
        self.radioButton_55.setObjectName("radioButton_55")
        self.radioButton_56 = QtWidgets.QRadioButton(self.tab_28)
        self.radioButton_56.setGeometry(QtCore.QRect(510, 410, 351, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_56.setFont(font)
        self.radioButton_56.setObjectName("radioButton_56")
        self.pushButton_29 = QtWidgets.QPushButton(self.tab_28)
        self.pushButton_29.setGeometry(QtCore.QRect(510, 200, 75, 23))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pushButton_29.setFont(font)
        self.pushButton_29.setObjectName("pushButton_29")
        self.tabWidget.addTab(self.tab_28, "")
        self.tab_29 = QtWidgets.QWidget()
        self.tab_29.setObjectName("tab_29")
        self.radioButton_57 = QtWidgets.QRadioButton(self.tab_29)
        self.radioButton_57.setGeometry(QtCore.QRect(510, 370, 561, 17))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_57.setFont(font)
        self.radioButton_57.setObjectName("radioButton_57")
        self.radioButton_58 = QtWidgets.QRadioButton(self.tab_29)
        self.radioButton_58.setGeometry(QtCore.QRect(510, 50, 551, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_58.setFont(font)
        self.radioButton_58.setObjectName("radioButton_58")
        self.pushButton_30 = QtWidgets.QPushButton(self.tab_29)
        self.pushButton_30.setGeometry(QtCore.QRect(510, 470, 75, 23))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pushButton_30.setFont(font)
        self.pushButton_30.setObjectName("pushButton_30")
        self.radioButton_59 = QtWidgets.QRadioButton(self.tab_29)
        self.radioButton_59.setGeometry(QtCore.QRect(510, 320, 551, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_59.setFont(font)
        self.radioButton_59.setObjectName("radioButton_59")
        self.radioButton_60 = QtWidgets.QRadioButton(self.tab_29)
        self.radioButton_60.setGeometry(QtCore.QRect(510, 10, 481, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_60.setFont(font)
        self.radioButton_60.setObjectName("radioButton_60")
        self.radioButton_61 = QtWidgets.QRadioButton(self.tab_29)
        self.radioButton_61.setGeometry(QtCore.QRect(510, 140, 481, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_61.setFont(font)
        self.radioButton_61.setObjectName("radioButton_61")
        self.textBrowser_15 = QtWidgets.QTextBrowser(self.tab_29)
        self.textBrowser_15.setGeometry(QtCore.QRect(0, 270, 511, 271))
        self.textBrowser_15.setObjectName("textBrowser_15")
        self.textBrowser_16 = QtWidgets.QTextBrowser(self.tab_29)
        self.textBrowser_16.setGeometry(QtCore.QRect(0, 0, 511, 271))
        self.textBrowser_16.setObjectName("textBrowser_16")
        self.radioButton_62 = QtWidgets.QRadioButton(self.tab_29)
        self.radioButton_62.setGeometry(QtCore.QRect(510, 280, 411, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_62.setFont(font)
        self.radioButton_62.setObjectName("radioButton_62")
        self.radioButton_63 = QtWidgets.QRadioButton(self.tab_29)
        self.radioButton_63.setGeometry(QtCore.QRect(510, 100, 511, 17))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_63.setFont(font)
        self.radioButton_63.setObjectName("radioButton_63")
        self.radioButton_64 = QtWidgets.QRadioButton(self.tab_29)
        self.radioButton_64.setGeometry(QtCore.QRect(510, 410, 351, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_64.setFont(font)
        self.radioButton_64.setObjectName("radioButton_64")
        self.pushButton_31 = QtWidgets.QPushButton(self.tab_29)
        self.pushButton_31.setGeometry(QtCore.QRect(510, 200, 75, 23))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pushButton_31.setFont(font)
        self.pushButton_31.setObjectName("pushButton_31")
        self.tabWidget.addTab(self.tab_29, "")
        self.outertabWidget.addTab(self.tab_5, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.groupBox = QtWidgets.QGroupBox(self.tab_2)
        self.groupBox.setGeometry(QtCore.QRect(0, 0, 501, 531))
        self.groupBox.setObjectName("groupBox")
        self.label_2 = QtWidgets.QLabel(self.groupBox)
        self.label_2.setGeometry(QtCore.QRect(20, 130, 101, 20))
        self.label_2.setObjectName("label_2")
        self.lineEdit = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit.setGeometry(QtCore.QRect(170, 119, 171, 41))
        self.lineEdit.setObjectName("lineEdit")
        self.label_3 = QtWidgets.QLabel(self.groupBox)
        self.label_3.setGeometry(QtCore.QRect(20, 210, 101, 20))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.groupBox)
        self.label_4.setGeometry(QtCore.QRect(20, 270, 101, 20))
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.groupBox)
        self.label_5.setGeometry(QtCore.QRect(20, 340, 111, 20))
        self.label_5.setObjectName("label_5")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit_2.setGeometry(QtCore.QRect(170, 189, 171, 41))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit_3.setGeometry(QtCore.QRect(170, 260, 171, 41))
        self.lineEdit_3.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.lineEdit_4 = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit_4.setGeometry(QtCore.QRect(170, 330, 171, 41))
        self.lineEdit_4.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.pushButton_12 = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_12.setGeometry(QtCore.QRect(124, 430, 181, 51))
        self.pushButton_12.setObjectName("pushButton_12")
        self.groupBox_2 = QtWidgets.QGroupBox(self.tab_2)
        self.groupBox_2.setGeometry(QtCore.QRect(560, 0, 501, 531))
        self.groupBox_2.setObjectName("groupBox_2")
        self.label_9 = QtWidgets.QLabel(self.groupBox_2)
        self.label_9.setGeometry(QtCore.QRect(80, 30, 101, 20))
        self.label_9.setObjectName("label_9")
        self.lineEdit_9 = QtWidgets.QLineEdit(self.groupBox_2)
        self.lineEdit_9.setGeometry(QtCore.QRect(210, 20, 171, 41))
        self.lineEdit_9.setObjectName("lineEdit_9")
        self.label_10 = QtWidgets.QLabel(self.groupBox_2)
        self.label_10.setGeometry(QtCore.QRect(80, 100, 101, 20))
        self.label_10.setObjectName("label_10")
        self.lineEdit_10 = QtWidgets.QLineEdit(self.groupBox_2)
        self.lineEdit_10.setGeometry(QtCore.QRect(210, 90, 171, 41))
        self.lineEdit_10.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit_10.setObjectName("lineEdit_10")
        self.pushButton_13 = QtWidgets.QPushButton(self.groupBox_2)
        self.pushButton_13.setGeometry(QtCore.QRect(150, 160, 121, 41))
        self.pushButton_13.setObjectName("pushButton_13")
        self.lineEdit_11 = QtWidgets.QLineEdit(self.groupBox_2)
        self.lineEdit_11.setGeometry(QtCore.QRect(600, 660, 171, 41))
        self.lineEdit_11.setObjectName("lineEdit_11")
        self.label_11 = QtWidgets.QLabel(self.groupBox_2)
        self.label_11.setGeometry(QtCore.QRect(450, 670, 111, 20))
        self.label_11.setObjectName("label_11")
        self.lineEdit_12 = QtWidgets.QLineEdit(self.groupBox_2)
        self.lineEdit_12.setGeometry(QtCore.QRect(600, 590, 171, 41))
        self.lineEdit_12.setObjectName("lineEdit_12")
        self.pushButton_14 = QtWidgets.QPushButton(self.groupBox_2)
        self.pushButton_14.setGeometry(QtCore.QRect(554, 760, 181, 51))
        self.pushButton_14.setObjectName("pushButton_14")
        self.lineEdit_13 = QtWidgets.QLineEdit(self.groupBox_2)
        self.lineEdit_13.setGeometry(QtCore.QRect(600, 519, 171, 41))
        self.lineEdit_13.setObjectName("lineEdit_13")
        self.groupBox_3 = QtWidgets.QGroupBox(self.groupBox_2)
        self.groupBox_3.setGeometry(QtCore.QRect(1110, 370, 501, 521))
        self.groupBox_3.setObjectName("groupBox_3")
        self.label_13 = QtWidgets.QLabel(self.groupBox_3)
        self.label_13.setGeometry(QtCore.QRect(80, 30, 101, 20))
        self.label_13.setObjectName("label_13")
        self.lineEdit_14 = QtWidgets.QLineEdit(self.groupBox_3)
        self.lineEdit_14.setGeometry(QtCore.QRect(210, 20, 171, 41))
        self.lineEdit_14.setObjectName("lineEdit_14")
        self.label_14 = QtWidgets.QLabel(self.groupBox_3)
        self.label_14.setGeometry(QtCore.QRect(80, 100, 101, 20))
        self.label_14.setObjectName("label_14")
        self.lineEdit_15 = QtWidgets.QLineEdit(self.groupBox_3)
        self.lineEdit_15.setGeometry(QtCore.QRect(210, 90, 171, 41))
        self.lineEdit_15.setObjectName("lineEdit_15")
        self.pushButton_15 = QtWidgets.QPushButton(self.groupBox_3)
        self.pushButton_15.setGeometry(QtCore.QRect(150, 160, 121, 41))
        self.pushButton_15.setObjectName("pushButton_15")
        self.label_15 = QtWidgets.QLabel(self.groupBox_2)
        self.label_15.setGeometry(QtCore.QRect(450, 540, 101, 20))
        self.label_15.setObjectName("label_15")
        self.lineEdit_16 = QtWidgets.QLineEdit(self.groupBox_2)
        self.lineEdit_16.setGeometry(QtCore.QRect(600, 449, 171, 41))
        self.lineEdit_16.setObjectName("lineEdit_16")
        self.label_16 = QtWidgets.QLabel(self.groupBox_2)
        self.label_16.setGeometry(QtCore.QRect(450, 600, 101, 20))
        self.label_16.setObjectName("label_16")
        self.lineEdit_17 = QtWidgets.QLineEdit(self.groupBox_2)
        self.lineEdit_17.setGeometry(QtCore.QRect(260, 400, 171, 41))
        self.lineEdit_17.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit_17.setObjectName("lineEdit_17")
        self.label_12 = QtWidgets.QLabel(self.groupBox_2)
        self.label_12.setGeometry(QtCore.QRect(50, 410, 111, 20))
        self.label_12.setObjectName("label_12")
        self.label_17 = QtWidgets.QLabel(self.groupBox_2)
        self.label_17.setGeometry(QtCore.QRect(50, 230, 101, 20))
        self.label_17.setObjectName("label_17")
        self.pushButton_16 = QtWidgets.QPushButton(self.groupBox_2)
        self.pushButton_16.setGeometry(QtCore.QRect(184, 530, 181, 51))
        self.pushButton_16.setObjectName("pushButton_16")
        self.lineEdit_18 = QtWidgets.QLineEdit(self.groupBox_2)
        self.lineEdit_18.setGeometry(QtCore.QRect(260, 340, 171, 41))
        self.lineEdit_18.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit_18.setObjectName("lineEdit_18")
        self.lineEdit_19 = QtWidgets.QLineEdit(self.groupBox_2)
        self.lineEdit_19.setGeometry(QtCore.QRect(260, 280, 171, 41))
        self.lineEdit_19.setObjectName("lineEdit_19")
        self.label_18 = QtWidgets.QLabel(self.groupBox_2)
        self.label_18.setGeometry(QtCore.QRect(50, 290, 101, 20))
        self.label_18.setObjectName("label_18")
        self.lineEdit_20 = QtWidgets.QLineEdit(self.groupBox_2)
        self.lineEdit_20.setGeometry(QtCore.QRect(260, 219, 171, 41))
        self.lineEdit_20.setObjectName("lineEdit_20")
        self.label_19 = QtWidgets.QLabel(self.groupBox_2)
        self.label_19.setGeometry(QtCore.QRect(50, 360, 101, 20))
        self.label_19.setObjectName("label_19")
        self.pushButton_17 = QtWidgets.QPushButton(self.groupBox_2)
        self.pushButton_17.setGeometry(QtCore.QRect(150, 460, 181, 51))
        self.pushButton_17.setObjectName("pushButton_17")
        self.outertabWidget.addTab(self.tab_2, "")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 10, 1191, 41))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1271, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.outertabWidget.setCurrentIndex(0)
        self.tabWidget_2.setCurrentIndex(0)
        self.tabWidget_3.setCurrentIndex(0)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.introtextedit.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><img src=\":/images/introimage.png\" /></p>\n"
"<h1 style=\" margin-top:24px; margin-bottom:15px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:120%;\"><span style=\" font-family:\'Roboto\'; font-size:22pt; font-weight:600; font-style:italic; text-decoration: underline; color:rgba(0,0,0,0.839216);\">Data Structures</span></h1>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:171.429%; background-color:#ffffff;\"><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">A</span><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216);\"> </span><span style=\" font-family:\'Roboto\'; font-size:14pt; font-weight:600; color:rgba(0,0,0,0.839216);\">data structure</span><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216);\"> is a particular way of organizing data in a computer so that it can be used effectively.</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:16pt;\"><br />Link list:</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14pt;\">   </span><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">Like arrays, Linked List is a linear data structure. Unlike arrays, linked list elements are not stored at a contiguous location; the elements are linked using pointers.</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><img src=\":/newPrefix/images/LinkedlistINTRO.png\" /></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Roboto\'; font-size:16pt; font-weight:600; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">Why Linked List?</span><span style=\" font-family:\'Roboto\'; font-size:16pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\"> </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">Arrays can be used to store linear data of similar types, but arrays have the following limitations. </span><span style=\" font-family:\'Roboto\'; font-size:14pt; font-weight:600; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">1)</span><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\"> The size of the arrays is fixed: So we must know the upper limit on the number of elements in advance. Also, generally, the allocated memory is equal to the upper limit irrespective of the usage. </span><span style=\" font-family:\'Roboto\'; font-size:14pt; font-weight:600; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">2)</span><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\"> Inserting a new element in an array of elements is expensive because the room has to be created for the new elements and to create room existing elements have to be shifted.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216);\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14pt;\">For example, in a system, if we maintain a sorted list of IDs in an array id[].</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:171.429%;\"><span style=\" font-size:14pt;\">id[] = [1000, 1010, 1050, 2000, 2040].</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:171.429%;\"><span style=\" font-size:14pt;\">And if we want to insert a new ID 1005, then to maintain the sorted order, we have to move all the elements after 1000 (excluding 1000).<br />Deletion is also expensive with arrays until unless some special techniques are used. For example, to delete 1010 in id[], everything after 1010 has to be moved.</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:171.429%;\"><span style=\" font-size:14pt; font-weight:600;\">Advantages over arrays</span><span style=\" font-size:14pt;\"><br /></span><span style=\" font-size:14pt; font-weight:600;\">1)</span><span style=\" font-size:14pt;\"> Dynamic size<br /></span><span style=\" font-size:14pt; font-weight:600;\">2)</span><span style=\" font-size:14pt;\"> Ease of insertion/deletion</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:171.429%;\"><span style=\" font-size:14pt; font-weight:600;\">Drawbacks:</span><span style=\" font-size:14pt;\"><br /></span><span style=\" font-size:14pt; font-weight:600;\">1)</span><span style=\" font-size:14pt;\"> Random access is not allowed. We have to access elements sequentially starting from the first node. So we cannot do binary search with linked lists efficiently with its default implementation. Read about it </span><a href=\"https://www.geeksforgeeks.org/binary-search-on-singly-linked-list/\"><span style=\" font-size:14pt; text-decoration: underline; color:#ec4e20;\">here</span></a><span style=\" font-size:14pt;\">.<br /></span><span style=\" font-size:14pt; font-weight:600;\">2)</span><span style=\" font-size:14pt;\"> Extra memory space for a pointer is required with each element of the list.<br /></span><span style=\" font-size:14pt; font-weight:600;\">3)</span><span style=\" font-size:14pt;\"> Not cache friendly. Since array elements are contiguous locations, there is locality of reference which is not there in case of linked lists.</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:171.429%;\"><span style=\" font-size:14pt; font-weight:600;\">Representation:</span><span style=\" font-size:14pt;\"><br />A linked list is represented by a pointer to the first node of the linked list. The first node is called the head. If the linked list is empty, then the value of the head is NULL.<br />Each node in a list consists of at least two parts:<br />1) data<br />2) Pointer (Or Reference) to the next node</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:171.429%;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:171.429%;\"><span style=\" font-family:\'Roboto\'; font-size:16pt; font-weight:600; color:rgba(0,0,0,0.839216);\">STACK:   </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:171.429%;\"><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216);\">    </span><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">Stack is a linear data structure which follows a particular order in which the operations are performed. The order may be LIFO(Last In First Out) or FILO(First In Last Out).</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:171.429%;\"><img src=\":/newPrefix/images/stackITRO.png\" /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:171.429%;\"><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">There are many real-life examples of a stack. Consider an example of plates stacked over one another in the canteen. The plate which is at the top is the first one to be removed, i.e. the plate which has been placed at the bottommost position remains in the stack for the longest period of time. So, it can be simply seen to follow LIFO(Last In First Out)/FILO(First In Last Out) order.</span><a name=\"tablist1-panel1\"></a><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216);\"><br /></span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:171.429%;\"><a name=\"tablist1-panel1\"></a><span style=\" font-family:\'Roboto\'; font-size:16pt; font-weight:600; color:rgba(0,0,0,0.839216);\">Q</span><span style=\" font-family:\'Roboto\'; font-size:16pt; font-weight:600; color:rgba(0,0,0,0.839216);\">UEUE:</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:171.429%;\"><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">A Queue is a linear structure which follows a particular order in which the operations are performed. The order is First In First Out (FIFO). A good example of a queue is any queue of consumers for a resource where the consumer that came first is served first. The difference between </span><a href=\"https://www.geeksforgeeks.org/stack-data-structure/\"><span style=\" font-family:\'Roboto\'; font-size:14pt; text-decoration: underline; color:#ec4e20; background-color:#ffffff;\">stacks </span></a><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">and queues is in removing. In a stack we remove the item the most recently added; in a queue, we remove the item the least recently added.</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:171.429%;\"><img src=\":/newPrefix/images/Queueintro.png\" /></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:171.429%; font-size:8pt;\"><br /></p></body></html>"))
        self.outertabWidget.setTabText(self.outertabWidget.indexOf(self.tab), _translate("MainWindow", "Tab 1"))
        self.comboBox.setItemText(0, _translate("MainWindow", "SINGLY LINKED LIST"))
        self.comboBox.setItemText(1, _translate("MainWindow", "DOUBLE LINKED LIST"))
        self.pushButton_6.setText(_translate("MainWindow", "GO"))
        self.comboBox_2.setItemText(0, _translate("MainWindow", "STACK"))
        self.comboBox_3.setItemText(0, _translate("MainWindow", "SINGLE QUEUE"))
        self.pushButton_7.setText(_translate("MainWindow", "GO"))
        self.pushButton_8.setText(_translate("MainWindow", "GO"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_6), _translate("MainWindow", "Tab 1"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_7), _translate("MainWindow", "Tab 2"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_8), _translate("MainWindow", "Page"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_9), _translate("MainWindow", "Page"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_10), _translate("MainWindow", "Page"))
        self.outertabWidget.setTabText(self.outertabWidget.indexOf(self.tab_3), _translate("MainWindow", "Page"))
        self.pushButton.setText(_translate("MainWindow", "LINKED LIST"))
        self.pushButton_2.setText(_translate("MainWindow", "QUEUE"))
        self.pushButton_3.setText(_translate("MainWindow", "STACK"))
        self.tabWidget_3.setTabText(self.tabWidget_3.indexOf(self.tab_11), _translate("MainWindow", "Tab 1"))
        self.tabWidget_3.setTabText(self.tabWidget_3.indexOf(self.tab_12), _translate("MainWindow", "Tab 2"))
        self.tabWidget_3.setTabText(self.tabWidget_3.indexOf(self.tab_14), _translate("MainWindow", "Page"))
        self.tabWidget_3.setTabText(self.tabWidget_3.indexOf(self.tab_13), _translate("MainWindow", "Page"))
        self.outertabWidget.setTabText(self.outertabWidget.indexOf(self.tab_4), _translate("MainWindow", "Page"))
        self.pushButton_4.setText(_translate("MainWindow", "LINKED LIST"))
        self.pushButton_5.setText(_translate("MainWindow", "STACK"))
        self.pushButton_9.setText(_translate("MainWindow", "QUEUE"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_15), _translate("MainWindow", "Tab 1"))
        self.textBrowser.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14pt; font-weight:600;\">LINKED LIST QUIZ </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14pt;\">QUESTION 1</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">What does the following function do for a given Linked List with first node as </span><span style=\" font-family:\'Roboto\'; font-size:14pt; font-style:italic; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">head </span><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">?</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">void fun1(struct node* head)</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">{</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">if(head==NULL)</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">  return;</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">fun1(head-&gt;next)</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">cout&lt;&lt;head-&gt;data;</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">}</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216);\"><br /></p></body></html>"))
        self.pushButton_10.setText(_translate("MainWindow", "ANSWER"))
        self.radioButton.setText(_translate("MainWindow", "PRINTS ALL NODES OF LINKED LIST"))
        self.radioButton_2.setText(_translate("MainWindow", "PRINTS ALL NODES IN REVERSE  ORDER"))
        self.radioButton_3.setText(_translate("MainWindow", "Prints alternate nodes of Linked List"))
        self.radioButton_4.setText(_translate("MainWindow", "Prints alternate nodes in reverse order"))
        self.textBrowser_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14pt;\">QUESTION 1</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">What does the following function do for a given Linked List with first node as </span><span style=\" font-family:\'Roboto\'; font-size:14pt; font-style:italic; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">head </span><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">?</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">void fun1(struct node* head)</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">{</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">if(head==NULL)</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">  return;</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">fun1(head-&gt;next)</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">cout&lt;&lt;head-&gt;data;</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">}</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216);\"><br /></p></body></html>"))
        self.radioButton_5.setText(_translate("MainWindow", "Random access is not allowed in a typical implementation of Linked Lists\n"
""))
        self.pushButton_11.setText(_translate("MainWindow", "ANSWER"))
        self.radioButton_6.setText(_translate("MainWindow", "The size of array has to be pre-decided but not linked list"))
        self.radioButton_7.setText(_translate("MainWindow", "All of the above"))
        self.radioButton_8.setText(_translate("MainWindow", "It is easy to insert and delete elements in Linked List"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_17), _translate("MainWindow", "Page"))
        self.radioButton_25.setText(_translate("MainWindow", "5 <--> 4 <--> 3 <--> 2 <--> 1 <-->6"))
        self.pushButton_22.setText(_translate("MainWindow", "ANSWER"))
        self.radioButton_26.setText(_translate("MainWindow", "*head_ref = NULL;\n"
""))
        self.textBrowser_7.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:16pt;\">QUESTION 3</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:16pt;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">Assume that reference of head of following doubly linked list is passed to above function 1 &lt;--&gt; 2 &lt;--&gt; 3 &lt;--&gt; 4 &lt;--&gt; 5 &lt;--&gt;6. What should be the modified linked list after the function call?</span></p></body></html>"))
        self.radioButton_27.setText(_translate("MainWindow", "6 <--> 5 <--> 4 <--> 3 <--> 2 <--> 1.\n"
""))
        self.radioButton_28.setText(_translate("MainWindow", "6 <--> 5 <--> 4 <--> 3 <--> 1 <--> 2\n"
""))
        self.radioButton_29.setText(_translate("MainWindow", "*head_ref = prev;"))
        self.pushButton_23.setText(_translate("MainWindow", "ANSWER"))
        self.radioButton_30.setText(_translate("MainWindow", "*head_ref = next;\n"
""))
        self.textBrowser_8.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:16pt;\">QUESTION 3</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:16pt;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">Assume that reference of head of following doubly linked list is passed to above function 1 &lt;--&gt; 2 &lt;--&gt; 3 &lt;--&gt; 4 &lt;--&gt; 5 &lt;--&gt;6. What should be the modified linked list after the function call?</span></p></body></html>"))
        self.radioButton_31.setText(_translate("MainWindow", "2 <--> 1 <--> 4 <--> 3 <--> 6 <-->5"))
        self.radioButton_32.setText(_translate("MainWindow", "*head_ref = current;\n"
""))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_16), _translate("MainWindow", "Tab 2"))
        self.radioButton_33.setText(_translate("MainWindow", "6,1"))
        self.textBrowser_9.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:16pt; font-weight:600;\">STACK</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:16pt;\">QUESTION 1</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">Following is an incorrect pseudocode for the algorithm which is supposed to determine whether a sequence of parentheses is balanced:</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:13px; margin-bottom:13px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\"><br /></p>\n"
"<table border=\"0\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px;\" cellspacing=\"0\" cellpadding=\"0\">\n"
"<tr>\n"
"<td bgcolor=\"#ffffff\" style=\" padding-left:0; padding-right:0; padding-top:0; padding-bottom:0;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><a name=\"highlighter_386517\"></a><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#000000;\">d</span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#000000;\">eclare a character stack </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-family:\'Monaco\'; font-size:14pt; font-weight:600; color:#006699;\">while</span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:rgba(0,0,0,0.839216);\"> </span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#000000;\">( more input is available)</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#000000;\">{</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-family:\'Monaco\'; font-size:14pt; color:rgba(0,0,0,0.839216);\">   </span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#000000;\">read a character</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-family:\'Monaco\'; font-size:14pt; color:rgba(0,0,0,0.839216);\">   </span><span style=\" font-family:\'Monaco\'; font-size:14pt; font-weight:600; color:#006699;\">if</span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:rgba(0,0,0,0.839216);\"> </span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#000000;\">( the character is a </span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#0000ff;\">\'(\'</span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:rgba(0,0,0,0.839216);\"> </span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#000000;\">) </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-family:\'Monaco\'; font-size:14pt; color:rgba(0,0,0,0.839216);\">      </span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#000000;\">push it on the stack</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-family:\'Monaco\'; font-size:14pt; color:rgba(0,0,0,0.839216);\">   </span><span style=\" font-family:\'Monaco\'; font-size:14pt; font-weight:600; color:#006699;\">else</span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:rgba(0,0,0,0.839216);\"> </span><span style=\" font-family:\'Monaco\'; font-size:14pt; font-weight:600; color:#006699;\">if</span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:rgba(0,0,0,0.839216);\"> </span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#000000;\">( the character is a </span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#0000ff;\">\')\'</span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:rgba(0,0,0,0.839216);\"> </span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#000000;\">and the stack is not empty )</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-family:\'Monaco\'; font-size:14pt; color:rgba(0,0,0,0.839216);\">      </span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#000000;\">pop a character off the stack</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-family:\'Monaco\'; font-size:14pt; color:rgba(0,0,0,0.839216);\">   </span><span style=\" font-family:\'Monaco\'; font-size:14pt; font-weight:600; color:#006699;\">else</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-family:\'Monaco\'; font-size:14pt; color:rgba(0,0,0,0.839216);\">      </span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#000000;\">print </span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#0000ff;\">&quot;unbalanced&quot;</span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:rgba(0,0,0,0.839216);\"> </span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#000000;\">and </span><span style=\" font-family:\'Monaco\'; font-size:14pt; font-weight:600; color:#ff1493;\">exit</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-family:\'Monaco\'; font-size:14pt; color:rgba(0,0,0,0.839216);\"> </span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#000000;\">}</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-family:\'Monaco\'; font-size:14pt; color:rgba(0,0,0,0.839216);\"> </span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#000000;\">print </span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#0000ff;\">&quot;balanced&quot;</span></p></td></tr></table></body></html>"))
        self.radioButton_34.setText(_translate("MainWindow", "((())\n"
""))
        self.radioButton_35.setText(_translate("MainWindow", "(()))()\n"
""))
        self.radioButton_36.setText(_translate("MainWindow", "1,5"))
        self.pushButton_24.setText(_translate("MainWindow", "ANSWER"))
        self.radioButton_37.setText(_translate("MainWindow", "(()()))\n"
""))
        self.radioButton_38.setText(_translate("MainWindow", "())(()\n"
""))
        self.radioButton_39.setText(_translate("MainWindow", "5,7"))
        self.radioButton_40.setText(_translate("MainWindow", "3,2"))
        self.pushButton_25.setText(_translate("MainWindow", "ANSWER"))
        self.textBrowser_10.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:16pt;\">QUESTION 1</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">Following is an incorrect pseudocode for the algorithm which is supposed to determine whether a sequence of parentheses is balanced:</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:13px; margin-bottom:13px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\"><br /></p>\n"
"<table border=\"0\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px;\" cellspacing=\"0\" cellpadding=\"0\">\n"
"<tr>\n"
"<td bgcolor=\"#ffffff\" style=\" padding-left:0; padding-right:0; padding-top:0; padding-bottom:0;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><a name=\"highlighter_386517\"></a><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#000000;\">d</span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#000000;\">eclare a character stack </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-family:\'Monaco\'; font-size:14pt; font-weight:600; color:#006699;\">while</span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:rgba(0,0,0,0.839216);\"> </span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#000000;\">( more input is available)</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#000000;\">{</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-family:\'Monaco\'; font-size:14pt; color:rgba(0,0,0,0.839216);\">   </span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#000000;\">read a character</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-family:\'Monaco\'; font-size:14pt; color:rgba(0,0,0,0.839216);\">   </span><span style=\" font-family:\'Monaco\'; font-size:14pt; font-weight:600; color:#006699;\">if</span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:rgba(0,0,0,0.839216);\"> </span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#000000;\">( the character is a </span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#0000ff;\">\'(\'</span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:rgba(0,0,0,0.839216);\"> </span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#000000;\">) </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-family:\'Monaco\'; font-size:14pt; color:rgba(0,0,0,0.839216);\">      </span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#000000;\">push it on the stack</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-family:\'Monaco\'; font-size:14pt; color:rgba(0,0,0,0.839216);\">   </span><span style=\" font-family:\'Monaco\'; font-size:14pt; font-weight:600; color:#006699;\">else</span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:rgba(0,0,0,0.839216);\"> </span><span style=\" font-family:\'Monaco\'; font-size:14pt; font-weight:600; color:#006699;\">if</span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:rgba(0,0,0,0.839216);\"> </span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#000000;\">( the character is a </span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#0000ff;\">\')\'</span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:rgba(0,0,0,0.839216);\"> </span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#000000;\">and the stack is not empty )</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-family:\'Monaco\'; font-size:14pt; color:rgba(0,0,0,0.839216);\">      </span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#000000;\">pop a character off the stack</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-family:\'Monaco\'; font-size:14pt; color:rgba(0,0,0,0.839216);\">   </span><span style=\" font-family:\'Monaco\'; font-size:14pt; font-weight:600; color:#006699;\">else</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-family:\'Monaco\'; font-size:14pt; color:rgba(0,0,0,0.839216);\">      </span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#000000;\">print </span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#0000ff;\">&quot;unbalanced&quot;</span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:rgba(0,0,0,0.839216);\"> </span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#000000;\">and </span><span style=\" font-family:\'Monaco\'; font-size:14pt; font-weight:600; color:#ff1493;\">exit</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-family:\'Monaco\'; font-size:14pt; color:rgba(0,0,0,0.839216);\"> </span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#000000;\">}</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-family:\'Monaco\'; font-size:14pt; color:rgba(0,0,0,0.839216);\"> </span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#000000;\">print </span><span style=\" font-family:\'Monaco\'; font-size:14pt; color:#0000ff;\">&quot;balanced&quot;</span></p></td></tr></table></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_18), _translate("MainWindow", "Page"))
        self.radioButton_41.setText(_translate("MainWindow", "284"))
        self.textBrowser_11.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:16pt;\">QUESTION 3</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:16pt;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">To evaluate an expression without any embedded function calls:</span></p></body></html>"))
        self.radioButton_42.setText(_translate("MainWindow", "One stack is enough\n"
""))
        self.radioButton_43.setText(_translate("MainWindow", "A Turing machine is needed in the general case\n"
""))
        self.radioButton_44.setText(_translate("MainWindow", "71"))
        self.pushButton_26.setText(_translate("MainWindow", "ANSWER"))
        self.radioButton_45.setText(_translate("MainWindow", "As many stacks as the height of the expression tree are needed\n"
""))
        self.radioButton_46.setText(_translate("MainWindow", "Two stacks are needed\n"
""))
        self.radioButton_47.setText(_translate("MainWindow", "213"))
        self.radioButton_48.setText(_translate("MainWindow", "142"))
        self.pushButton_27.setText(_translate("MainWindow", "ANSWER"))
        self.textBrowser_12.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:16pt;\">QUESTION 3</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:16pt;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">To evaluate an expression without any embedded function calls:</span></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_27), _translate("MainWindow", "Page"))
        self.radioButton_49.setText(_translate("MainWindow", "3"))
        self.radioButton_50.setText(_translate("MainWindow", "When data is transferred asynchronously between two processes\n"
""))
        self.pushButton_28.setText(_translate("MainWindow", "ANSWER"))
        self.radioButton_51.setText(_translate("MainWindow", "2"))
        self.radioButton_52.setText(_translate("MainWindow", "When a resource is shared among multiple consumers.\n"
""))
        self.radioButton_53.setText(_translate("MainWindow", "All of the above\n"
""))
        self.textBrowser_13.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:16pt;\">QUESTION 1</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:16pt;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">Which one of the following is an application of Queue Data Structure?</span></p></body></html>"))
        self.textBrowser_14.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:16pt; font-weight:600;\">QUEUE</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:16pt;\">QUESTION 1</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:16pt;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">Which one of the following is an application of Queue Data Structure?</span></p></body></html>"))
        self.radioButton_54.setText(_translate("MainWindow", "1"))
        self.radioButton_55.setText(_translate("MainWindow", "Load Balancing\n"
""))
        self.radioButton_56.setText(_translate("MainWindow", "4"))
        self.pushButton_29.setText(_translate("MainWindow", "ANSWER"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_28), _translate("MainWindow", "Page"))
        self.radioButton_57.setText(_translate("MainWindow", "q[9]\n"
""))
        self.radioButton_58.setText(_translate("MainWindow", "Full: (REAR+1) mod n == FRONT, empty: (FRONT+1) mod n == REAR\n"
""))
        self.pushButton_30.setText(_translate("MainWindow", "ANSWER"))
        self.radioButton_59.setText(_translate("MainWindow", "q[1]\n"
""))
        self.radioButton_60.setText(_translate("MainWindow", "Full: (REAR+1) mod n == FRONT, empty: REAR == FRONT\n"
""))
        self.radioButton_61.setText(_translate("MainWindow", "Full: (FRONT+1) mod n == REAR, empty: REAR == FRONT\n"
""))
        self.textBrowser_15.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:16pt;\">QUESTION 3</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:16pt;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">Suppose a circular queue of capacity (n – 1) elements is implemented with an array of n elements. Assume that the insertion and deletion operation are carried out using REAR and FRONT as array index variables, respectively. Initially, REAR = FRONT = 0. The conditions to detect queue full and queue empty are</span></p></body></html>"))
        self.textBrowser_16.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:16pt;\">QUESTION 3</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:16pt;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Roboto\'; font-size:14pt; color:rgba(0,0,0,0.839216); background-color:#ffffff;\">Suppose a circular queue of capacity (n – 1) elements is implemented with an array of n elements. Assume that the insertion and deletion operation are carried out using REAR and FRONT as array index variables, respectively. Initially, REAR = FRONT = 0. The conditions to detect queue full and queue empty are</span></p></body></html>"))
        self.radioButton_62.setText(_translate("MainWindow", "q[0]\n"
""))
        self.radioButton_63.setText(_translate("MainWindow", "Full: REAR == FRONT, empty: (REAR+1) mod n == FRONT\n"
""))
        self.radioButton_64.setText(_translate("MainWindow", "q[10]\n"
""))
        self.pushButton_31.setText(_translate("MainWindow", "ANSWER"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_29), _translate("MainWindow", "Page"))
        self.outertabWidget.setTabText(self.outertabWidget.indexOf(self.tab_5), _translate("MainWindow", "Page"))
        self.groupBox.setTitle(_translate("MainWindow", "ADD NEW USER"))
        self.label_2.setText(_translate("MainWindow", "USER NAME"))
        self.label_3.setText(_translate("MainWindow", "EMAIL ADDRESS"))
        self.label_4.setText(_translate("MainWindow", "PASSWORD"))
        self.label_5.setText(_translate("MainWindow", "CONFIRM PASSWORD"))
        self.pushButton_12.setText(_translate("MainWindow", "ADD USER"))
        self.groupBox_2.setTitle(_translate("MainWindow", "EDIT USER"))
        self.label_9.setText(_translate("MainWindow", "USER NAME"))
        self.label_10.setText(_translate("MainWindow", "PASSWORD"))
        self.pushButton_13.setText(_translate("MainWindow", "LOGIN"))
        self.label_11.setText(_translate("MainWindow", "CONFIRM PASSWORD"))
        self.pushButton_14.setText(_translate("MainWindow", "ADD USER"))
        self.groupBox_3.setTitle(_translate("MainWindow", "EDIT USER"))
        self.label_13.setText(_translate("MainWindow", "USER NAME"))
        self.label_14.setText(_translate("MainWindow", "PASSWORD"))
        self.pushButton_15.setText(_translate("MainWindow", "LOGIN"))
        self.label_15.setText(_translate("MainWindow", "EMAIL ADDRESS"))
        self.label_16.setText(_translate("MainWindow", "PASSWORD"))
        self.label_12.setText(_translate("MainWindow", "CONFIRM PASSWORD"))
        self.label_17.setText(_translate("MainWindow", "USER NAME"))
        self.pushButton_16.setText(_translate("MainWindow", "ADD USER"))
        self.label_18.setText(_translate("MainWindow", "EMAIL ADDRESS"))
        self.label_19.setText(_translate("MainWindow", "PASSWORD"))
        self.pushButton_17.setText(_translate("MainWindow", "EDIT USER DATA"))
        self.outertabWidget.setTabText(self.outertabWidget.indexOf(self.tab_2), _translate("MainWindow", "Tab 2"))
        self.label.setText(_translate("MainWindow", "                                                            VISUAL STRUCTURES"))
import image_rc


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
